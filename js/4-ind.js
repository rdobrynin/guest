'use strict';var options = {	app_id: 638461, //2926589	app_width: loadingOptions.app_width,	bannerTop: "#bannerTop", //Для jsf.windowAlign	newStyle: loadingOptions.newStyle,	minVer: loadingOptions.minVer,	midVer: loadingOptions.midVer,	newSecondMenu: true,	topBannerUsing: true,	localData: {isPro: false, proTime: 0, invActivated: false},	isDev: ([35828305, 46778579, 36079777, 36586468, 37455877, 36829273, 2283751, 148082133].indexOf(query.viewer_id) != -1),	isTest: (query.api_id == 3910631),	v: "1.0.0"};var appState = {	mainMenuTab: null,	tab_guests_sex: 0,	tab_guests_guestsCount: 1,	tab_friendGuests_frId: 0,	tab_friendGuests_scrollCopy: 1,	tab_fans_sex: 0,	tab_fans_period: 0,	tab_friends_tab: 1,	tab_friends_frCount: [1, 1, 1, 1, 1],	tab_stat_tab: 1,	tab_offers_main: false,	tab_offers_promose: false,	tab_promose3_tab: 1,	scrollY: 0,	windowHeight: 600,	appOffset: 72,	curHeight: loadingOptions.curHeight,	currentBuyType: 0,	hasOpenedTrupPost: false,	trup1copied: false,	trup1pasted: false,	populSex: 0,	populAgeMin: 0,	populAgeMax: 0,	populNum: 0,	proMousemove: 0,	promoseTab1: null,	promoseTab2: null,	closedOfferChoses: {},	openedOrderStats: {},	trup3showed: false,	trup4showed: false,	appLoaded: false,	appLoaded2: false,	appLoaded3: false,	appLoaded4: false,	onAppLoaded: [],	onAppLoaded2: [],	onAppLoaded3: [],	onAppLoaded4: [],	presentButtonActive: true,	v: "1.0.0"};//Тестирование://1		- версия: 1//2		- версия: 2//3		- версия: 3//3		- версия: 4//707	- ширина: min,  1707 - без гостей//812	- ширина: mid,  1812 - без гостей//1000	- без PRO//1001	- без гостей//1002	- почистить кэш//1003	- со всеми офферами//1004	- показать окно офферов//1005  - окно с выбором бонуса//Функции, необходимые для инициализацииvar initFunctions = new function() {	this.appLoaded  = appLoaded1;	this.appLoaded1 = appLoaded1;	this.appLoaded2 = appLoaded2;	this.appLoaded3 = appLoaded3;	this.appLoaded4 = appLoaded4;	this.execAfterLoading  = execAfterLoading1;	this.execAfterLoading1 = execAfterLoading1;	this.execAfterLoading2 = execAfterLoading2;	this.execAfterLoading3 = execAfterLoading3;	this.execAfterLoading4 = execAfterLoading4;	this.hideMenuItem = hideMenuItem;	this.updateBannerHeight = updateBannerHeight;	this.newDesign = newDesign;	this.oldDesign = oldDesign;	this.localStorageInit = localStorageInit;	this.adInit = adInit;	this.updateAfterLoadedPro = updateAfterLoadedPro;	this.removeLoader = removeLoader;		function appLoaded1(f) 			{ appState.appLoaded = true;  for (var i = 0; i < appState.onAppLoaded.length; i++)  setTimeout(appState.onAppLoaded[i], 0); }	function appLoaded2(f) 			{ appState.appLoaded2 = true; for (var i = 0; i < appState.onAppLoaded2.length; i++) setTimeout(appState.onAppLoaded2[i], 0); }	function appLoaded3(f) 			{ appState.appLoaded3 = true; for (var i = 0; i < appState.onAppLoaded3.length; i++) setTimeout(appState.onAppLoaded3[i], 0); }	function appLoaded4(f) 			{ appState.appLoaded4 = true; for (var i = 0; i < appState.onAppLoaded4.length; i++) setTimeout(appState.onAppLoaded4[i], 0); }	function execAfterLoading1(f)	{ if (appState.appLoaded)  setTimeout(f, 0); else appState.onAppLoaded.push(f); }	//Полная загрузка приложения	function execAfterLoading2(f)	{ if (appState.appLoaded2) setTimeout(f, 0); else appState.onAppLoaded2.push(f); }	//Первый этап загрузки приложения	function execAfterLoading3(f)	{ if (appState.appLoaded3) setTimeout(f, 0); else appState.onAppLoaded3.push(f); }	//getInfo	function execAfterLoading4(f)	{ if (appState.appLoaded4) setTimeout(f, 0); else appState.onAppLoaded4.push(f); }	//Друзья		function hideMenuItem(id) {		$(id).hide();		$(id).removeClass("isUsing");	}		function updateBannerHeight() {		$("#bannerTop").css("height", options.localData.isPro || !options.topBannerUsing ? "0": "135px");	}		function newDesign() {		//if ($("#secondCss").attr("href") != "index2.css?2") $("#secondCss").attr("href", "index2.css?2");		if (query.user_id == 3) $("head").append($("<link rel='stylesheet' href='index3.css?2' type='text/css'/>"));		if (query.user_id == 4) $("head").append($("<link rel='stylesheet' href='index4.css?2' type='text/css'/>"));				$("#mainMenuItem4 > span").html("Всё о друзьях");		$("#mainMenuItem5 > span").html("Моя статистика");		$("#mainMenuItem6 > span").html("Мой профиль");		$("#secondMenuItem2 > .text").html("Поймать больше гостей");		if (options.newSecondMenu) $("#secondMenuItem2 > .text").html("Поймать <a href='#' class='aButton2'>больше гостей</a>");		$("#secondMenuItem1 > .text").html("Стать невидимкой  /  Убрать рекламу");		$("#secondMenuItem1 > .text").html("Стать невидимкой");		$("#secondMenuItem1").hide();		$("#secondMenuItem3").hide();		$("#secondMenuItem4").hide();		$("#metroWindowCloseButton").html("Закрыть");		$("#mainMenuItem1").removeClass("active");		$("#mainMenuItem2").addClass("active");		$("#mainMenuItem2").nextAll(".isUsing").eq(0).css("border-left", "1px solid #245582");				initFunctions.hideMenuItem("#mainMenuItem1");		initFunctions.hideMenuItem("#mainMenuItem5");				if (query.api_id == 3910631 || query.api_id == 3954344) {			$("#secondMenuItem9").css("display", "");			$("#secondMenuItem10").css("display", "");			$("#secondMenuItem9 > .text").html("<a href='#' class='aButton2'>Вкладка 1</a>");			$("#secondMenuItem10 > .text").html("<a href='#' class='aButton2'>Вкладка 2</a>");			$("#secondMenuItem2").hide();		}	}		function oldDesign() {		initFunctions.hideMenuItem("#mainMenuItem7");		options.topBannerUsing = false;		initFunctions.updateBannerHeight();	}		function localStorageInit() {		if (window.addEventListener) window.addEventListener("storage", handle_storage, false); else window.attachEvent("onstorage", handle_storage);				var proTime = lsf.getItem("proTime");		var invActivated = lsf.getItem("invActivated");				if (proTime !== null && jsf.isInt(proTime)) options.localData.proTime = +proTime;		if (proTime !== null && jsf.isInt(proTime)) options.localData.isPro = (options.localData.proTime > Math.floor((new Date()).getTime() / 1000));		if (invActivated !== null && options.localData.isPro) options.localData.invActivated = (invActivated == "true");				if (proTime !== null && invActivated !== null) updateAfterLoadedPro();				function handle_storage(e) {			if (!e) { e = window.event; }			//key, oldValue (may be null), newValue (may be null), url/uri		}	}		function adInit() {		if (!options.topBannerUsing) return;		VK.Widgets.Ads('vk_ads_937', {}, {			"ad_unit_id": 937,			"demo": "0",			"ads_count": 2,			"ad_type": "horizontal",			"ad_unit_type": "horizontal",			"ad_unit_width": options.app_width,			"ad_unit_height": 135,			"font_size": "big",			"background_color": options.newStyle ? "FFFFFF" : "F3F7FF",			"separator_color": options.newStyle ? "FFFFFF" : "F3F7FF",			"vk_link_color": "4073B5",			"handler": function(errorCode) {				//callback не вызывается в IE7-				if (errorCode === 0) {					$("#bannerTop").hide();				}else{					$("#bannerTop").show();					$("#bannerTop").css("opacity", 1);					initFunctions.updateBannerHeight();				}				return true;			}		});		$("#bannerTop").css("opacity", 0);	}		function updateAfterLoadedPro() {		initFunctions.updateBannerHeight();									//Баннер сверху		if ($("#adsTable").length > 0) tabs.ads();							//Обновление моих объявлений		if (appState.mainMenuTab == "mainMenuItem6") tabs.account();		//Обновление вкладки "Аккаунт"		if (appState.mainMenuTab == "mainMenuItem7") tabs.promose(true);	//Обновление вкладки "Стать популярным"				if (options.newStyle) {			var buttonsNum = 0;						if (options.localData.isPro || options.newSecondMenu) {			//КНОПКА НЕВИДИМКА ВКЛ				buttonsNum++;				$("#secondMenuItem6").css("display", "");				if (options.newSecondMenu) {					if (options.localData.isPro && options.localData.invActivated) {						$("#secondMenuItem6 > .img").addClass("active");						$("#secondMenuItem6 > .text").html("<a href='#' class='aButton2'>Выключить</a> невидимку");					}else{						$("#secondMenuItem6 > .img").removeClass("active");						$("#secondMenuItem6 > .text").html("<a href='#' class='aButton2'>Включить</a> невидимку");					}				}else{					$("#secondMenuItem6 > .text").html("Невидимка " + (options.localData.invActivated ? "включена" : "выключена"));				}			}else{				$("#secondMenuItem6").css("display", "none");			}						if (true) {														//КНОПКА PRO АКТИВЕН ДО				buttonsNum++;				$("#secondMenuItem5").css("display", "");				if (options.newSecondMenu) {					if (options.localData.isPro) {						$("#secondMenuItem5 > .img").addClass("active");						$("#secondMenuItem5 > .text").html("PRO активен до " + jsf.echoDate(options.localData.proTime + app.vkTimeShift, "shortYear") + " <a href='#' class='aButton2'>(продлить)</a>");					}else{						$("#secondMenuItem5 > .img").removeClass("active");						$("#secondMenuItem5 > .text").html("PRO неактивен <a href='#' class='aButton2'>(получить)</a>");					}					$("#secondMenuItem5").css("min-width", "");					appState.proMousemove = 0;				}else				if (options.localData.isPro && buttonsNum < 3) {					$("#secondMenuItem5 > .text").html("PRO активен до " + jsf.echoDate(options.localData.proTime + app.vkTimeShift));					$("#secondMenuItem5").css("min-width", "");					appState.proMousemove = 0;				}else{					$("#secondMenuItem5 > .text").html("PRO " + (options.localData.isPro ? "активен" : "неактивен"));					$("#secondMenuItem5").css("min-width", $("#secondMenuItem5").width() + "px");					appState.proMousemove = options.localData.isPro ? 1 : 0;				}			}		}	}		function removeLoader() {		if (progressbar.done) return;		progressbar.done = true;		clearInterval(progressbar.interval);		var partsNum = 3;		updateCur();				function updateCur() {			if (progressbar.cur == 100) return initFunctions.execAfterLoading(removeFunct);			progressbar.cur += Math.ceil((100 - progressbar.cur) / partsNum);			progressbar.render();			partsNum--;			setTimeout(updateCur, 40);		}				function removeFunct() {			progressbar.real = 100;			$("#preloader").remove();			appSys.updateHeight(appState.lastHeightAdd);		}	}}//Старт приложенияif (!window.reg) window.reg = {getDay: function() { return 0; }, setMaxDay: function() {}};if      (query.critical_error)		jsf.alert("Ваш браузер работает некорректно. Возможно, Ваш браузер устарел.<br>Попробуйте зайти в приложение через другой браузер.");else if (!window.$)					jsf.alert("Обнаружены проблемы с интернет соединением!<br>Попробуйте обновить страницу", {noButton: true});else if (!window.app)				jsf.alert("Произошла ошибка при загрузке 3-app.js, попробуйте обновить страницу.<br>Если это не поможет, попробуйте зайти с другого браузера или почистите кэш.", {noButton: true});else if (true)						$(function() {	try { if (options.newStyle) initFunctions.newDesign(); else initFunctions.oldDesign(); } catch(e) {}	try { if (lsf.hasStorage) initFunctions.localStorageInit(); } catch(e) {}	jsf.vkInit({noChangeLoc: false}, function() {		try {			if (query.api_id == 638461 && !options.localData.isPro && !options.isDev && typeof(CMBlockVK) != "undefined") {				var cmBlock = new CMBlockVK({is_app_user: 1, viewer_id: query.viewer_id, api_id: query.api_id});				cmBlock.setupPreroll(16822, {});			}		} catch(e) {		}		try { VK.callMethod("resizeWindow", options.app_width, appState.curHeight); } catch(e) {}		setTimeout(initFunctions.adInit, 0);		setTimeout(function() { app.getInfo(); }, 0);		setTimeout(function() { app.loadApp(init5_allButtons); }, 0); //init1_vkEvents		if (query.user_id != query.viewer_id && query.user_id > 0 && options.localData.invActivated == false) setTimeout(function() { jsf.query({qTo: "server3", method: "visit", user_id: query.user_id, api_id: query.api_id}); }, 0);		init1_vkEvents();	});});//Инициализация//Инициализация событий ВК (данная функция нужна, т.к. переход на следующий шаг происходит только после события onScrollTop)function init1_vkEvents() {	var needNextStep = true;	var needUpdateAlign = true;	var updateAlign_lastUpdatedValue = 0;		/*VK.addCallback("onWallPostSave", function() {		jsf.alert("Пост был сохранён на стену");	});		VK.addCallback("onWallPostCancel", function() {		jsf.alert("Пост не был сохранён на стену");	});*/		//Подписываемся на событие инфо о странице	VK.addCallback("onScrollTop", function(scrollY, windowHeight, appOffset, tabActive) {		var needUpdate = (appState.scrollY != scrollY);		appState.scrollY = scrollY;		appState.windowHeight = windowHeight;		appState.appOffset = appOffset;		if (needUpdate) jsf.updateAlign(!needUpdateAlign);		if (needNextStep) {			needNextStep = false;			if (true) {				if      (appState.windowHeight < 640-70) VK.callMethod("scrollWindow", appOffset - 1);  //+70 = 700				else if (appState.windowHeight < 640-46) VK.callMethod("scrollWindow", appOffset - 25); //+46 = 700				else if (appState.windowHeight < 640-12) VK.callMethod("scrollWindow", appOffset - 59); //+12 = 700			}			init2_jsfGui(); //Следующий шаг		}	});		//Подписываемся на событие прокрутки страницы	var hasSubmenu = true;	VK.addCallback("onScroll", function(scrollY, windowHeight) {		var needUpdate = (appState.scrollY != scrollY);		appState.scrollY = scrollY;		appState.windowHeight = windowHeight;		if (needUpdate) jsf.updateAlign(!needUpdateAlign);		if (options.newStyle && appState.mainMenuTab == "mainMenuItem3") {			var scVal = scrollY - appState.appOffset - $("#fanSuperTitleCont").offset().top - 16 - 32;			var color = Math.max(Math.min(Math.round(scVal / 6.66) + 249, 255), 249);			$("#fanContTitle > .fanCont > .title").stop().animate({"lineHeight": Math.max((scVal + 51) * 2 - 39, 53) + "px", "height": Math.max(scVal + 51, 51) + "px"}, {duration: 0, easing: "linear", queue: false});			$("#fanContTitle > .fanCont > .title.light").css("background-color", "rgb(" + color + "," + color + "," + color + ")");			$("#fanContTitleLine1").css("background", "rgba(215, 215, 215, " + Math.min(Math.max(scVal, 0) / 40, 1).toFixed(3) + ")");			$("#fanContTitleLine2").css("background", "rgba(0, 0, 0, " + Math.min(Math.max(scVal, 0) / 400, 0.1).toFixed(3) + ")");			$("#fanContTitleLine3").css("background", "rgba(0, 0, 0, " + Math.min(Math.max(scVal, 0) / 800, 0.05).toFixed(3) + ")");			$("#fanContTitleLine4").css("background", "rgba(0, 0, 0, " + Math.min(Math.max(scVal, 0) / 1600, 0.025).toFixed(3) + ")");		}	});		//Подписываемся на событие покупки товара	VK.addCallback("onOrderSuccess", function(orderId) {		//jsf.alert("orderId = " + orderId);		var curType = appState.currentBuyType;		if (curType == 0 && !options.newStyle) curType = 1;		if (curType == 1) jsf.metroShow.close("metro_buyPro");		if (curType == 3) jsf.metroShow.close("metro_buyPopul");		appSys.onPay();	});		//Подписываемся на событие активации окна	VK.addCallback("onOrderCancel", function() {		//jsf.alert("onOrderCancel");		appSys.setBuyType(0, 0);	});		//Подписываемся на событие активации окна	VK.addCallback("onWindowFocus", function() {		//jsf.alert("onWindowFocus");		appSys.setBuyType(0, 3000);	});		//Вызываем события	VK.callMethod("scrollTop");	VK.callMethod("scrollSubscribe", false);	setTimeout(function() { VK.callMethod("scrollTop"); }, 1000);	setTimeout(function() { needUpdateAlign = false; }, 1200);	setInterval(function() {		VK.callMethod("scrollTop");		if (appState.trup1copied && appState.trup1pasted && app.trup1done == false && $("#copyTrupLinkCont").length > 0) {			jsf.vkApi("users.get", {v: "5.9", fields: "site"}, function(data) {				if (data[0].site.indexOf("vk.com/app" + query.api_id + "_" + query.viewer_id) != -1) {					app.trup1done = true;					$("#copyTrupLinkCont > .trupIsDoneCont").addClass("done");					$("#copyTrupLinkCont > .trupIsDoneCont > .text").html("Установлено");				}				//console.log(data[0].site + " " + Math.random());			});		}	}, 2000);}//Инциализация JSF GUI (чекбоксы и слайдеры)function init2_jsfGui() {	//Чекбоксы	$(document).on("click", ".myRadio1, .radio1container", function(event) {		var name = $(this).attr("name");		$('[name="' + name + '"]').removeClass("checked");		$(this).addClass("checked");		$(this).trigger({type: "changeRadioValue", value: $(this).attr("value")});	});		//Слайдеры	var onSliderDown = false;	$(document).on("mousedown", ".slider > .runner > .img", function(event) {		if (event.which != 1) return;		event.preventDefault();		if (onSliderDown) return;				//Получаем элементы		var runner = $(this).parent();		var slider = runner.parent();		var line = slider.children(".sliderFon");				//Проверки на корректность		if (line.length != 1) return false; //Проверка, что у нас ровно одна линия		if (runner.hasClass("runner1") || runner.hasClass("runner2")) { //Проверка, на количество бегунков			if (slider.children(".runner1").length != 1 || slider.children(".runner2").length != 1 || slider.children(".runner").length != 2) return false;		}else{			if (slider.children(".runner").length != 1) return false;		}				//Вычисляем значения		var beginValue = runner.attr("value");		var sliderWidth = slider.outerWidth();		var incX = event.clientX - $(this).offset().left;				//Минимальное и максимальное положение бегунка		var minX = 0;		var maxX = sliderWidth;		if (runner.hasClass("runner1")) maxX = slider.children(".runner2").position().left - Math.round(sliderWidth / 100 * 5);		if (runner.hasClass("runner2")) minX = slider.children(".runner1").position().left + Math.round(sliderWidth / 100 * 5);				//Процесс начала изменения положения бегунка		onSliderDown = true;		$(document).css("cursor", "pointer", "important");		$(document).on("mouseup", onMouseUp);		$(document).on("mousemove", onMouseMove);		var coord = line.offset();		var x1 = coord.left;		var y1 = coord.top;		var x2 = x1 + line.outerWidth() - 1;		var y2 = y1 + line.outerHeight() - 1;				//Отпускание бегунка		function onMouseUp(event) {			event.preventDefault();			onSliderDown = false;			$(document).css("cursor", "", "");			$(document).off("mouseup", onMouseUp);			$(document).off("mousemove", onMouseMove);						var clientX = event.clientX - incX;			var xx = clientX - x1;			if (xx < minX) xx = minX;			if (xx > maxX) xx = maxX;			var value = Math.round(xx / sliderWidth * 100);						if (clientX < x1 - 150 || clientX > x2 + 150 || event.clientY < y1 - 100 || event.clientY > y1 + 100) {			}else{				runner.attr("value", value);				runner.css("left", value + "%");				if (runner.hasClass("runner1") || runner.hasClass("runner2")) {					slider.trigger({type: "changeSliderValue", value1: slider.children(".runner1").attr("value"), value2: slider.children(".runner2").attr("value")});				}else{					slider.trigger({type: "changeSliderValue", value: value});				}			}		}				//Перемещение бегунка		var lastValue = beginValue;		function onMouseMove(event) {			event.preventDefault();			var clientX = event.clientX - incX;			if (clientX < x1 - 150 || clientX > x2 + 150 || event.clientY < y1 - 100 || event.clientY > y1 + 100) {				runner.attr("value", beginValue);				runner.css("left", beginValue + "%");				var value = beginValue;			}else{				var xx = clientX - x1;				if (xx < minX) xx = minX;				if (xx > maxX) xx = maxX;				var value = Math.round(xx / sliderWidth * 100);				runner.attr("value", value);				runner.css("left", (xx) + "px");			}			if (value != lastValue) {				lastValue = value;				if (runner.hasClass("runner1") || runner.hasClass("runner2")) {					slider.trigger({type: "moveRunner", value1: slider.children(".runner1").attr("value"), value2: slider.children(".runner2").attr("value")});				}else{					slider.trigger({type: "moveRunner", value: value});				}			}		}	});		//Следующий шаг	init3_allMetro();}//Инициализация всех метро-оконfunction init3_allMetro() {	$("#metroWindowCont").on("click", "#trupLink", function(event) {			//Выделение текста при клике на поле от ссылки-ловушки		event.preventDefault();		$(this).select();	});	$("#metroWindowCont").on("click", "#copyTrupLink", function(event) {		//Копировать ссылку-ловушку	});	$("#metroWindowCont").on("mousemove", function(event) {						//Удаляет выделение кнопки (т.к. само оно не всегда хорошо удаляется)		$("#copyTrupLink").removeClass("zeroclipboard-is-hover");	});	$("#metroWindowCont").on("click", "#trupToWallButton", function(event) {	//Разместить ссылку-ловушку на стене		if (true) {			var message;			if      (options.newStyle)	message = "За последнюю неделю у меня " + app.stat.guests[0].num + " " + jsf.getEnd(app.stat.guests[0].num, "гость", "гостя", "гостей") + ". А у тебя? Смотри здесь - http://vk.com/app" + query.api_id + "_" + query.viewer_id;			else if (options.newStyle)	message = "Теперь ты можешь узнать, кто твои скрытые поклонники ВКонтакте, здесь - http://vk.com/app" + query.api_id + "_" + query.viewer_id;			else if (true)				message = "Раскрой всех своих поклонников здесь - http://vk.com/app" + query.api_id + "_" + query.viewer_id;		}		//jsf.vkApi("wall.post", {v: "5.10", message: message, attachments: "photo-10042064_332552344"}, function(data) {		jsf.vkApi("wall.post", {v: "5.10", message: message, attachments: options.newStyle ? "photo35828305_337617230" : undefined}, function(data) {			if (data.post_id) {				app.trup2done = true;				$("#trupToWallButtonCont > .trupIsDoneCont").addClass("done");				$("#trupToWallButtonCont > .trupIsDoneCont > .text").html("Установлено");			}		});		//appState.hasOpenedTrupPost = true;	});	$("#metroWindowCont").on("mouseup", ".linkToContacts", function(event) {	//Разместить ссылку-ловушку на стене		appState.trup1pasted = true;	});	$("#metroWindowCont").on("click", "#copyTrupLink", function(event) {		//Разместить ссылку-ловушку на стене		jsf.alert("Ошибка: Ссылка <span style='font-weight:bold;color:#f00'>не скопирована</span>! Для копирования выделите текст в поле,<br>затем нажмите правой кнопкой по нему и выберите \"Копировать\"");		$("#copyTrupLink").css({cursor: "default", opacity: "0.5"});		if (window.options.newStyle) {			$("#copyTrupLink").hide();			$("#pasteTrupLink").css("display", "");			if (!app.trup1done) $("#copyTrupLinkCont > .trupIsDoneCont > .text").html("Ссылка <a href='//vk.com/edit?act=contacts' target='_blank' class='aButton1 linkToContacts' style='color:#ff3b3b; font-weight:bold;'>не вставлена</a>");		}		appState.trup1copied = true;	});	$("#metroWindowCont").on("click", "#proSkills", function(event) {			//Возможности PRO		appSys.showMetro("metro_proBonuses", {width: 450, popup: true});	});	$("#metroWindowCont").on("click", "#invProButton", function(event) {		//Покупка невидимки		VK.callMethod("showOrderBox", {type: 'item', item: 'inv' + $('[name="invDuration"].checked').attr("value")});		appSys.setBuyType(2, 0);	});	$("#metroWindowCont").on("click", "#buyProButton", function(event) {		//Покупка PRO-аккаунта		var votes = $('[name="proDuration"].checked').attr("value");		if (votes == 0) {			tabs.offers({main: false, promose: false});		}else{			VK.callMethod("showOrderBox", {type: 'item', item: 'pr' + votes});			appSys.setBuyType(1, 0);		}	});	$("#metroWindowCont").on("click", "#buyProButton20", function(event) {		//Покупка PRO-аккаунта		VK.callMethod("showOrderBox", {type: 'item', item: 'pr20'});		appSys.setBuyType(1, 0);	});	$("#metroWindowCont").on("click", "#buyProButton10", function(event) {		//Покупка PRO-аккаунта		VK.callMethod("showOrderBox", {type: 'item', item: 'pr10'});		appSys.setBuyType(1, 0);	});	$("#metroWindowCont").on("click", "#buyProButton5", function(event) {		//Покупка PRO-аккаунта		VK.callMethod("showOrderBox", {type: 'item', item: 'pr5'});		appSys.setBuyType(1, 0);	});	$("#metroWindowCont").on("click", "#buyProButton2", function(event) {		//Покупка PRO-аккаунта		VK.callMethod("showOrderBox", {type: 'item', item: 'pr2'});		appSys.setBuyType(1, 0);	});	$("#metroWindowCont").on("click", "#buyProButtonFree", function(event) {	//Покупка PRO-аккаунта		tabs.offers({main: false, promose: false});	});	$("#metroWindowCont").on("click", "#getFreeProButton", function(event) {	//Бесплатное получение PRO-аккаунта		tabs.offers({main: false, promose: false});	});	$("#metroWindowCont").on("click", "#saveInvState", function(event) {		//Сохранение статуса невидимки		if ($(this).hasClass("gray")) return;		$(this).addClass("gray");		var state = $('[name="invActivated"].checked').attr("value");		var stateOn = (state == "1");		var theSame = ((options.localData.invActivated == stateOn) && (app.userInfo.needAskInv == false));		jsf.query({qTo: "server3", method: (state == "1" ? "activateInv" : "deactivateInv")}, function(data) {			if ("error" in data || "response" in data == false) return;			if (!theSame) {				app.getInfo();				jsf.metroShow.close("metro_changeInv");			}		});		if (theSame) {			jsf.metroShow.close("metro_changeInv");		}	});	$("#metroWindowCont").on("click", "#choseOffer", function(event) {			//Сохранение статуса невидимки		if ($(this).hasClass("gray")) return;		$(this).addClass("gray");		var s = $(this).attr("value");		var a = s.split("-"); if (a.length != 3) return;		var spendFor = $('[name="offerBonus"].checked').attr("value");		var targetSexConverted = (app.profilesCash[query.viewer_id].sex == 2 ? 2 : 1);		jsf.query({qTo: (spendFor == "promose" ? "server2" : "server3"), method: "spendOffer", time: a[0], id: a[1], votes: a[2], spendFor: spendFor, sex: targetSexConverted}, function(data) {			if ("error" in data || "response" in data == false) return;			jsf.metroShow.close("metro_choseOfferBonus");			if (data.response.status !== 0) return;			var tp = 0;			if (spendFor == "pro") tp = 1;			if (spendFor == "promose") tp = 3;			appSys.onPay({prefix: "Бонус успешно зачислен", currentBuyType: tp});		});	});	$("#metroWindowCont").on("click", "#appUpdatedOK", function(event) {		//Закрыть окно информации		jsf.metroShow.close("metro_appUpdated");	});	$("#metroWindowCont").on("click", "#buyOneMorePromose", function(event) {	//Заказать ещё продвижение		jsf.metroShow.close("metro_adDonePopup");		appSys.clicks_buyPopul();	});	$("#metroWindowCont").on("click", "#closePopulOrders", function(event) {	//Закрыть список заказов на раскрутку профиля		jsf.metroShow.close("metro_ads");	});	$("#metroWindowCont").on("click", "#buyPopulButton", function(event) {		//Купить раскрутку		var sex = $('[name="populSex1"].checked').attr("value");		var minAge = appSys.calcAge($("#ageSlider > .runner1").attr("value"));		var maxAge = appSys.calcAge($("#ageSlider > .runner2").attr("value"));		var votes = appSys.calcVotes($("#numSlider > .runner").attr("value"));		var tm = calcShowes.calcIt(votes, sex, minAge, maxAge);		if (tm.covPercent < 0.5) return jsf.alert("Слишком маленький охват (" + tm.covPercent.toFixed(1) + "%).<br>Минимально допустимый охват - 0.5%.<br>Попробуйте расширить возрастные рамки.");		var sumShowes = tm.showesNum + tm.bonusNum;				var adsPayType = $('[name="adsPayType"].checked');		if (adsPayType.length > 0 && adsPayType.attr("value") == 1) {			if (app.userInfo.antonMoney < votes * 100) return jsf.alert("У Вас недостаточно монет для этой покупки.<br>У Вас есть " + app.userInfo.antonMoney + " " + jsf.getEnd(app.userInfo.antonMoney, "монета", "монеты", "монет") + ", а нужно " + (votes * 100) + " монет.<br>Попробуйте оплатить покупку голосами.");			jsf.alert("Вы уверены, что хотите совершить покупку? Стоимость заказа " + (votes * 100) + " монет", {cancelButton: true, onOK: function() {				jsf.query({qTo: "server2", method: "buyAd", sex: sex, minAge: minAge, maxAge: maxAge, votes: votes}, function(data) {					if ("error" in data || "response" in data == false) return;					if (data.response.status !== 0) return jsf.alert(data.response.msg);					jsf.metroShow.close("metro_buyPopul");					appSys.onPay({currentBuyType: 3});				});			}});		}else{			VK.callMethod("showOrderBox", {type: 'item', item: "ad_" + votes + '_' + sex + '_' + minAge + '_' + maxAge + "_" + sumShowes});			appSys.setBuyType(3, 0);		}		console.log("sumShowes = " + sumShowes);	});	$("#content").on("click", "#getFreePromose", function(event) {				//Купить раскрутку - Бесплатно		tabs.offers({main: false, promose: true});	});	$("#content").on("click", "#promoseBuyPack", function(event) {				//Купить раскрутку - Готовые пакеты		var pack = $('[name="promosePacks"].checked').attr("value");		var votes = 0, minAge = 0, maxAge = 1000;		var targetSexConverted = (app.profilesCash[query.viewer_id].sex == 2 ? 2 : 1);				switch (pack) {			case "pack1": votes = 2; break;			case "pack2": votes = 5; break;			case "pack3": votes = 10; break;			case "pack4": votes = 50; break;		}		var tm = calcShowes.calcIt(votes, targetSexConverted, minAge, maxAge);		var sumShowes = tm.showesNum + tm.bonusNum;				VK.callMethod("showOrderBox", {type: 'item', item: "ad_" + votes + '_' + targetSexConverted + '_' + minAge + '_' + maxAge + "_" + sumShowes});		appSys.setBuyType(3, 0);		console.log("sumShowes = " + sumShowes);	});	$("#content").on("click", "#promoseBuyManual", function(event) {			//Купить раскрутку - Ручная настройка		var tm = appSys.updateShowesText2();		if (tm === false) return jsf.alert("Поля заполнены неверно");		if (tm.covPercent < 0.5) return jsf.alert("Слишком маленький охват (" + tm.covPercent.toFixed(1) + "%).<br>Минимально допустимый охват - 0.5%.<br>Попробуйте расширить возрастные рамки.");		var sumShowes = tm.showesNum + tm.bonusNum;		if (sumShowes < 300) return jsf.alert("Вы выбрали очень маленькую аудиторию для вашего бюджета, Ваше<br>продвижение может быть малоэффективным! Вы хотите продолжить?", {cancelButton: true, onOK: showOrderBox});		showOrderBox();				function showOrderBox() {			VK.callMethod("showOrderBox", {type: 'item', item: "ad_" + tm.votes + '_' + tm.sex + '_' + tm.minAge + '_' + tm.maxAge + "_" + sumShowes});			appSys.setBuyType(3, 0);			console.log("sumShowes = " + sumShowes);		}	});		//Офферы		$("#modalWindow, #metroWindowCont").on("click", ".close", function(event) {				//Спрятать предложение		var offer_id = +$(this).parent().attr("value");		if (app.sOptions.hidedOffers.indexOf(offer_id) == -1) app.sOptions.hidedOffers.push(offer_id);		if (app.sOptions.hidedOffers.length > 100) app.sOptions.hidedOffers = app.sOptions.hidedOffers.slice(app.sOptions.hidedOffers.length - 100);		var offset = $("#offerBlock").scrollTop()		tabs.offers();		$("#offerBlock").scrollTop(offset);		jsf.saveOptions();	});	$("#modalWindow, #metroWindowCont").on("click", ".closeCancel", function(event) {		//Вернуть предложение		var offer_id = +$(this).parent().attr("value");		if (app.sOptions.hidedOffers.indexOf(offer_id) != -1) app.sOptions.hidedOffers.splice(app.sOptions.hidedOffers.indexOf(offer_id), 1);		var offset = $("#offerBlock").scrollTop()		tabs.offers();		$("#offerBlock").scrollTop(offset);		jsf.saveOptions();	});	$("#modalWindow, #metroWindowCont").on("click", ".offerItem", function(event) {			//Выполнение оффера		//jsf.alert($(this).attr("value"));		if ($(event.target).hasClass("close") || $(event.target).hasClass("closeCancel")) return;		if (options.newStyle) return;		VK.callMethod("showOrderBox", {type: 'offers', offer_id: $(this).attr("value")});		jsf.query({qTo: "offers", method: "showOffer", offer_id: $(this).attr("value")});		console.log("offer_id = " + $(this).attr("value"));	});	$("#metroWindowCont").on("click", "#enterChosenOffer", function(event) {				//Выполнение оффера		var offer_id = $('[name="offerItem"].checked');		if (offer_id.length == 0) return console.log("checked item not found");		offer_id = +offer_id.attr("value");		VK.callMethod("showOrderBox", {type: 'offers', offer_id: offer_id});		jsf.query({qTo: "offers", method: "showOffer", offer_id: offer_id});		console.log("offer_id = " + offer_id);	});		//Следующий шаг	init4_populMetro();}//Иницализация метро-окна "Повысить популярность"function init4_populMetro() {	//Клик на выбор пола	$("#metroWindowCont").on("changeRadioValue", '.myRadio1[name="populSex1"]', function(event) {		appState.populSex1 = event.value;		appSys.updateShowesText();	});		//Клик на смену способа оплаты	$("#metroWindowCont").on("changeRadioValue", '.myRadio1[name="adsPayType"]', function(event) {		if (event.value == 1) {			$("#moneyRadioText").html("Монетами &nbsp;(У Вас " + app.userInfo.antonMoney + " " + jsf.getEnd(app.userInfo.antonMoney, "монета", "монеты", "монет") + ")");		}else{			$("#moneyRadioText").html("Монетами из старой версии");		}		onMoveNumSlider({value: $("#numSlider > .runner").attr("value")});		//$("#antonBalance").show();		//appSys.updateShowesText();	});		$("#metroWindowCont").on("moveRunner", "#ageSlider", function(event) {		var value1 = appSys.calcAge(event.value1);		var value2 = appSys.calcAge(event.value2);		var value1a = (value1 == 0 ? "13" : value1);		var value2a = (value2 == 1000 ? "∞" : value2);		if (event.value1 <= event.value2 - 10) {			$("#ageSlider > .runner1 > .tx").html("от " + value1a);			$("#ageSlider > .runner2 > .tx").html("до " + value2a);		}else{			$("#ageSlider > .runner1 > .tx").html(value1a);			$("#ageSlider > .runner2 > .tx").html(value2a);		}		appSys.updateShowesText();	});		var onMoveNumSlider = function(event) {		var value = appSys.calcVotes(event.value);		var adsPayType = $('[name="adsPayType"].checked');		if (adsPayType.length > 0 && adsPayType.attr("value") == 1) {			$("#numSlider > .runner > .tx").html((value * 100) + " " + jsf.getEnd(value * 100, "монета", "монеты", "монет"));		}else{			$("#numSlider > .runner > .tx").html(value + " " + jsf.getEnd(value, "голос", "голоса", "голосов"));		}		appSys.updateShowesText();	};	$("#metroWindowCont").on("moveRunner", "#numSlider", onMoveNumSlider);		$("#metroWindowCont").on("changeSliderValue", "#ageSlider", function(event) {		console.log("ageSlider: value1 = " + event.value1 + ", value2 = " + event.value2);		//jsf.alert("test1");		//console.log(event);	});		$("#metroWindowCont").on("changeSliderValue", "#numSlider", function(event) {		console.log("numSlider: value = " + event.value);		//jsf.alert("test2");		//console.log(event);	});		$("#content").on("input", "#promose_minAge, #promose_maxAge, #promose_budget", function() {		appSys.updateShowesText2();	});	$("#content").on("changeRadioValue", '.myRadio1[name="populSex2"]', function(event) {		appSys.updateShowesText2();	});	$("#metroWindowCont").on("changeRadioValue", '.myRadio1[name="offerBonus"]', function(event) {		$("#choseOffer").removeClass("gray");	});		//Следующий шаг	//init5_allButtons();}//Инициализация всех кнопокfunction init5_allButtons() {	//Главное меню	var onMenuButtonClick = function(event) {		event.preventDefault(); //Отмена клика по ссылке		if (appState.mainMenuTab == this.id) return;		var visualMainMenuTab = appState.mainMenuTab;		if (visualMainMenuTab == "mainMenuItem9" || visualMainMenuTab == "mainMenuItem10") { //временный вариант на момент разработки			for (var i = 1; i <= 10; i++) {				$("#mainMenuItem" + i).removeClass("active");				if (options.newStyle) $("#mainMenuItem" + i).nextAll(".isUsing").eq(0).css("border-left", "");			}		}		if (visualMainMenuTab == "mainMenuItem8") visualMainMenuTab = "mainMenuItem4";		if (visualMainMenuTab == "mainMenuItem10") visualMainMenuTab = "mainMenuItem7";				$("#" + visualMainMenuTab).removeClass("active");		$(this).addClass("active");		if (options.newStyle) {			$("#" + visualMainMenuTab).nextAll(".isUsing").eq(0).css("border-left", "");			$(this).nextAll(".isUsing").eq(0).css("border-left", "1px solid #245582");		}				appState.mainMenuTab = this.id;		switch (this.id) {			case "mainMenuItem1": tabs.main(); break;			case "mainMenuItem2": tabs.guests(); break;			case "mainMenuItem3": tabs.fans(); if (options.newStyle && !app.trup3done && !appState.trup3showed) toWallFans(); break;			case "mainMenuItem4": tabs.friends(); break;			case "mainMenuItem5": tabs.stat(); break;			case "mainMenuItem6": tabs.account(); if (options.newStyle && !app.trup4done && !appState.trup4showed) toWallIAmInVk(); break;			case "mainMenuItem7": tabs.promose(); break;			case "mainMenuItem9": tabs.promose2(); break;			default: appSys.updateContent("");		}		if (this.id != "mainMenuItem7") appSys.setCounter(this.id.substr(12), 0);		if (appState.scrollY > appState.appOffset + 50) VK.callMethod("scrollWindow", appState.appOffset - 1);				function getNextChild(id) {			var tm = next		}	};	$("#mainMenuItem1").click(onMenuButtonClick);	$("#mainMenuItem2").click(onMenuButtonClick);	$("#mainMenuItem3").click(onMenuButtonClick);	$("#mainMenuItem4").click(onMenuButtonClick);	$("#mainMenuItem5").click(onMenuButtonClick);	$("#mainMenuItem6").click(onMenuButtonClick);	$("#mainMenuItem7").click(onMenuButtonClick);	$("#mainMenuItem9").click(onMenuButtonClick);		//Второе меню	appSys.bindSecondMenu("#secondMenuItem1", appSys.clicks_buyPro);	appSys.bindSecondMenu("#secondMenuItem2", appSys.clicks_trupWind);	appSys.bindSecondMenu("#secondMenuItem3", appSys.clicks_buyPro);	appSys.bindSecondMenu("#secondMenuItem4", appSys.clicks_buyPopul);	appSys.bindSecondMenu("#secondMenuItem5", appSys.clicks_buyPro);	appSys.bindSecondMenu("#secondMenuItem6", appSys.clicks_changeInvState);	appSys.bindSecondMenu("#secondMenuItem7", appSys.clicks_tabs_ads);	appSys.bindSecondMenu("#secondMenuItem8", appSys.clicks_present);	appSys.bindSecondMenu("#secondMenuItem9", appSys.clicks_promose2);	appSys.bindSecondMenu("#secondMenuItem10",appSys.clicks_promose3);		//Подменю внутри #content	appSys.bind("#content", ".submenu a", function(event) {		var parent = $(this).parent();		if (parent.hasClass("checked")) return;		$("#content .submenu li").removeClass("checked");		parent.addClass("checked");		switch (appState.mainMenuTab) {			case "mainMenuItem2": tabs.guests(this.id); break;			case "mainMenuItem3": tabs.fans(this.id); break;			case "mainMenuItem4": tabs.friends(this.id); break;			case "mainMenuItem5": tabs.stat(this.id); break;			case "mainMenuItem8": tabs.friendGuests({user_id: appState.tab_friendGuests_frId, sexId: this.id}); break;			case "mainMenuItem10":tabs.promose3({tabId: this.id}); break;		}	});		//Кнопки, дублирующие второе меню	appSys.bind("#content", "#lineBuyProBtn",		appSys.clicks_buyPro);	appSys.bind("#content", "#trupButton",			appSys.clicks_trupWind);	appSys.bind("#content", "#trupButton2",			appSys.clicks_trupWind);	appSys.bind("#content", "#invButton1",			appSys.clicks_buyPro);	appSys.bind("#content", "#invButton2",			appSys.clicks_buyPro);	appSys.bind("#content", "#proButton1",			appSys.clicks_buyPro);	appSys.bind("#content", "#popButton1",			appSys.clicks_tabs_ads);	appSys.bind("#metroWindowCont", "#oldOlrders",	appSys.clicks_tabs_ads);	appSys.bind("#content", "#invActButton1",		appSys.clicks_changeInvState);	appSys.bind("#content", "#proButton2",			appSys.clicks_buyPro);	appSys.bind("#content", "#incPopulButton",		appSys.clicks_buyPopul);	appSys.bind("#modalWindow", "#refreshAds",		appSys.clicks_refreshMyAdsList);	appSys.bind("#metroWindowCont", "#refreshAds",	appSys.clicks_refreshMyAdsList);	appSys.bind("#content", ".refreshAds",			appSys.clicks_refreshMyAdsList);	appSys.bind("#content", "#openPromose3",		appSys.clicks_promose3);		//Отмена событий	appSys.bind("#metroWindowCont", "#trupScreenshotCont");		//Вкладка друзья - Информация | Гости | Поклонники	$("#content").on("click", ".right a", function(event) {		event.preventDefault();		//jsf.alert("test");	});		//Кнопки внутри #content	var process = false;	var toWallFunct = function(tabId, text, options) {		if (process) return; else process = true;		cvf.preuploadImage(tabId, function(error) {			process = false;			if (error) return jsf.alert("Произошла ошибка при загрузке фотографии. Попробуйте позже.");			jsf.vkApi('wall.post', {v: "5.9", message: text, attachments: "photo" + query.viewer_id + "_" + cvf.wallIdsByTab[tabId]}, function(data) {				switch(tabId) {					case 0: case 1: case 2: app.trup3done = true;					case 3: app.trup4done = true;				}			});			if (options && options.regDay) {				$("#regDateHided").html(jsf.echoDate(options.regDay * 86400));				$("#iAmInVkWallButton2").html("Показать всем");			}		});	};	var toWallFans = function(event) {	//Пост на стену		if (event) event.preventDefault();		if (!cvf.fansCanvasD[appState.tab_fans_period]) return;		appState.trup3showed = true;		var tx = "";		if (appState.tab_fans_period == 0) tx = "за неделю";		if (appState.tab_fans_period == 1) tx = "за месяц";		if (appState.tab_fans_period == 2) tx = "за всё время";		toWallFunct(appState.tab_fans_period, "Я узнал своих поклонников " + tx + ". А есть ли поклонники у тебя? Смотри здесь - http://vk.com/app" + query.api_id + "_" + query.viewer_id);	};	var toWallIAmInVk = function(event) { //Пост на стену		if (event) event.preventDefault();		if (!cvf.fansCanvasD[3]) return;		if (appState.trup4showed) app.trup4done = true;		appState.trup4showed = true;		var regDay = reg.getDay(query.viewer_id);		var regDays = Math.floor(app.theVkTime / 86400) - regDay;		var regYears = Math.floor(regDays / 365.25); regDays -= regYears * 365.25;		var regMonths = Math.floor(regDays / 30.4375); regDays -= regMonths * 30.4375;		regDays = Math.floor(regDays);				var tx = "";		if (regYears >= 1) tx += (tx ? ", " : "") + regYears + " " + jsf.getEnd(regYears, "год", "года", "лет");		if (regMonths >= 1) tx += (tx ? ", " : "") + regMonths + " " + jsf.getEnd(regMonths, "месяц", "месяца", "месяцев");		if (true) tx += (tx ? " и " : "") + regDays + " " + jsf.getEnd(regDays, "день", "дня", "дней");		toWallFunct(3, "Я Вконтакте уже " + tx + ". А сколько ты? Смотри здесь - http://vk.com/app" + query.api_id + "_" + query.viewer_id, {regDay: regDay});	};	$("#content").on("click", "#fansWallButton", toWallFans);	$("#content").on("click", "#iAmInVkWallButton,#iAmInVkWallButton2", toWallIAmInVk);	$("#content").on("click", "#moreGuests", function(event) {		//Показать больше гостей		event.preventDefault();		if (appState.mainMenuTab == "mainMenuItem8") {			tabs.friendGuests({user_id: appState.tab_friendGuests_frId, incCount: true});		}else{			tabs.guests(undefined, true);		}	});	$("#content").on("click", "#moreFriends", function(event) {		//Показать больше друзей		event.preventDefault();		tabs.friends("tab_guests_subLink" + appState.tab_friends_tab, true);	});	$("#content").on("click", "#toAllGusts", function(event) {		//Посмотреть всех гостей		event.preventDefault();		VK.callMethod("scrollWindow", $("#bannerTop:visible").height() + appState.appOffset - 1);		$("#mainMenuItem2").click();	});	$("#content").on("click", ".toAllGusts", function(event) {		//Посмотреть всех гостей		event.preventDefault();		if (appState.scrollY > appState.appOffset + 50) VK.callMethod("scrollWindow", appState.appOffset - 1);		$("#mainMenuItem2").click();	});	$("#content").on("click", "#toAllFans", function(event) {		//Посмотреть всех поклонников		event.preventDefault();		VK.callMethod("scrollWindow", $("#bannerTop:visible").height() + appState.appOffset - 1);		$("#mainMenuItem3").click();	});	$("#content").on("keyup", "#friendsSearchBar", function(event) {//Ввод текста в строку поиска		event.preventDefault();		tabs.friends("tab_guests_subLink" + appState.tab_friends_tab);	});	$("#content").on("click", ".oneAd .showStat", function(event) { //Показать/скрыть статистику заказа		event.preventDefault();		var stat = $(this).parent().parent().children(".stat");		if (stat.is(":visible")) {			stat.hide();			$(this).html("Показать статистику заказа");			delete appState.openedOrderStats[$(this).attr("value")];		}else{			stat.show();			$(this).html("Скрыть статистику заказа");			appState.openedOrderStats[$(this).attr("value")] = 1;		}		appSys.updateHeight(0);	});	$("#content").on("click", ".promoseTab > .whitePaint", function(event) { //Выбор Ручная настройка / Готовые пакеты		event.preventDefault();		$("#promoseTab" + appState.promoseActiveTab).removeClass("active"); //$("#content .promoseTab").removeClass("active");		if (appState.promoseActiveTab == 1) {			appState.promoseTab1 = {};			appState.promoseTab1.activePack = $(".radio1container.checked[name=promosePacks]").attr("value");			$(".radio1container.checked[name=promosePacks]").removeClass("checked");		}		if (appState.promoseActiveTab == 2) {			appState.promoseTab2 = {};			appState.promoseTab2.sex = $(".myRadio1.checked[name=populSex2]").attr("value");			appState.promoseTab2.minAge = $("#promose_minAge").val();			appState.promoseTab2.maxAge = $("#promose_maxAge").val();			appState.promoseTab2.budget = $("#promose_budget").val();			$(".myRadio1.checked[name=populSex2]").removeClass("checked");			$("#promose_minAge").val("");			$("#promose_maxAge").val("");			$("#promose_budget").val("");			$("#promose_savings").html("");			$("#promose_ageWarning").hide();			$("#promose_budgetWarning").hide();			$("#promose_showesSum").html("");			$("#promose_showesExt").html("");			$("#promose_minAge").removeClass("red");			$("#promose_maxAge").removeClass("red");			$("#promose_budget").removeClass("red");		}				$(this).parent().addClass("active");		appState.promoseActiveTab = $(this).parent().attr("id").substr(10);		if (appState.promoseActiveTab == 1 && appState.promoseTab1) {			$(".radio1container[name=promosePacks][value=" + appState.promoseTab1.activePack + "]").addClass("checked");		}		if (appState.promoseActiveTab == 2 && appState.promoseTab2) {			$(".myRadio1[name=populSex2][value=" + appState.promoseTab2.sex + "]").addClass("checked");			$("#promose_minAge").val(appState.promoseTab2.minAge);			$("#promose_maxAge").val(appState.promoseTab2.maxAge);			$("#promose_budget").val(appState.promoseTab2.budget);			appSys.updateShowesText2();		}	});	$("#content").on("click", ".avasCont3 > .friendCont .viewGuests", function(event) { //Список гостей друга		event.preventDefault();		var user_id = +$(this).attr("value");		tabs.friendGuests({user_id: user_id, callbackPre: function() {			appState.tab_friendGuests_scrollCopy = appState.scrollY;			if (appState.scrollY > appState.appOffset) VK.callMethod("scrollWindow", appState.appOffset - 1);		}, callbackPost: function() {					appState.mainMenuTab = "mainMenuItem8";			appState.tab_friendGuests_frId = user_id;		}});	});	$("#content").on("click", "#friendsBackButton", function(event) { //Список гостей друга		event.preventDefault();		appState.mainMenuTab = "mainMenuItem4";		appState.tab_friends_frCount[appState.tab_friends_tab]--;		tabs.friends(undefined, true);		if (appState.scrollY > appState.appOffset || appState.tab_friendGuests_scrollCopy > appState.appOffset) VK.callMethod("scrollWindow", appState.tab_friendGuests_scrollCopy);	});		//Клик по гостю	var guestsClicks = 0;	var guestsQuery = 0;	var guestClick = function() {		if (guestsQuery == 1) return;		var value = $(this).attr("value");		if (typeof(value) == "undefined") return; //Во избежание ошибок, всего скорее причина в том, что пользователь переходит на другую вкладку до того, как сработает событие клика, либо очень-очень редкий лаг от mousedown/mouseup		if (value.substr(0, 2) == "id") {			if (options.localData.invActivated == false) {				guestsQuery = 1;				jsf.query({qTo: "server3", method: "visit", user_id: value.substr(2), fromApp: 1, api_id: query.api_id}, function() { guestsQuery = 0; });			}		}else{			guestsQuery = 1;			var showAdParams = {qTo: "server2", method: "adClick", ad_id: value, invActivated: (options.localData.invActivated ? 1 : 0), sex: app.profilesCash[query.viewer_id].sex};			if ("bdate" in app.profilesCash[query.viewer_id]) showAdParams.age = jsf.parseAge(app.profilesCash[query.viewer_id].bdate, app.theVkTime); //Возраст			if (!showAdParams.age && "age" in app.profilesCash[query.viewer_id]) showAdParams.age = app.profilesCash[query.viewer_id].age; //Возраст, способ №2			jsf.query(showAdParams, function() { guestsQuery = 0; });		}	};	$("#content").on("mousedown", ".avasCont1 > .oneGuest > .userLink", function(event) {		if (event.which != 1 && event.which != 2) return;		guestsClicks = 1;	});	$(document).on("mouseup", function(event) {		setTimeout(function() { guestsClicks = 0; }, 100);	});	$(document).on("mouseup", ".avasCont1 > .oneGuest > .userLink", function(event) {		if (event.which != 1 && event.which != 2) return;		if (guestsClicks == 1) guestClick.call(this);	});	$("#content").on("click", ".avasCont1 > .oneGuest > .userLink", guestClick);	$("#content").on("click", ".avasCont1 > .oneGuest > .paid", function(event) {		event.preventDefault();		$("#mainMenuItem7").click();		if (appState.scrollY > appState.appOffset + 50) VK.callMethod("scrollWindow", appState.appOffset - 1);	});		//Подсказки	jsf.attachHint("#modalWindow, #metroWindowCont", ".close", "Спрятать это предложение<br>(оно станет отображаться внизу)", {staticHint: true, hideOnClick: true});	jsf.attachHint("#modalWindow, #metroWindowCont", ".closeCancel", "Вернуть это предложение наверх", {staticHint: true, hideOnClick: true});	$("#secondMenuItem5").on("mouseover", function() { if (appState.proMousemove == 1) $("#secondMenuItem5 > .text").html("До " + jsf.echoDate(options.localData.proTime + app.vkTimeShift, "shortYear")); });	$("#secondMenuItem5").on("mouseout", function() { if (appState.proMousemove == 1) $("#secondMenuItem5 > .text").html("PRO " + (options.localData.isPro ? "активен" : "неактивен")); });		//Фреймы	var myProfile = app.profilesCash[query.viewer_id];	var sex = myProfile.sex;	var country = ("country" in myProfile ? myProfile.country.id : 0);	var city = ("city" in myProfile ? myProfile.city.id : 0);	var age = ("bdate" in myProfile ? jsf.parseAge(myProfile.bdate, app.theVkTime) : 0);	jsf.showFrame({appLoaded: true, init: true, noOpacity: false, id: query.viewer_id, sex: sex, age: age, city: city, country: country});		//Другое	$(options.newStyle ? "#mainMenuItem2" : "#mainMenuItem1").click();										//Выбор первой вкладки	if (app.profilesCash[query.viewer_id].sex == 1) $("#secondMenuItem4 > .text").html("Стать популярной");	//Изменение надписей в зависимости от пола	if (query.user_id == 1004) VK.callMethod("showOrderBox", {type: 'offers'});								//Контактовское окно с офферами	initFunctions.appLoaded();																				//Приложение загружено	setTimeout(app.reserveCalc, 4000);																		//Произвести вычисления	if (query.user_id == 1002 && options.isDev) jsf.alert("Вы уверены, что хотите полностью очистить localStorage?", {cancelButton: true, onOK: function() { localStorage.clear(); }});		//Предзагрузка постов	if (options.newStyle) {		cvf.createPost_fans(0, app.fansListWeek);		cvf.createPost_fans(1, app.fansListMonth);		cvf.createPost_fans(2, app.fansList);		cvf.createPost_iAmInVk(3);	}}//Системные функции приложенияvar appSys = new function() {	this.updateHeight = updateHeight;			//Обновить высоту приложения	this.updateContent = updateContent();		//Обновить содержимое блока content	this.setCounter = setCounter;				//Установить счётчик	this.showMetro = showMetro;					//Показать метро-окно	this.updateShowesText = updateShowesText;	//Пересчитать охват аудитории и количество показов	this.updateShowesText2 = updateShowesText2;	//Пересчитать охват аудитории и количество показов	this.calcAge = calcAge;						//Значение возраста по значению бегунка	this.calcVotes = calcVotes;					//Значение суммы голосов по значению бегунка	this.setBuyType = setBuyType();				//Значение суммы голосов по значению бегунка	this.onPay = onPay;							//Значение суммы голосов по значению бегунка	this.setStorageItem = setStorageItem;		//Установить значение в localStorage	this.getProTimeString = getProTimeString;	//Получить время PRO для офферов		this.bind = bind;	this.bindSecondMenu = bindSecondMenu;	this.clicks_listener = clicks_listener;	this.clicks_trupWind = clicks_trupWind;	this.clicks_buyPro = clicks_buyPro;	this.clicks_changeInvState = clicks_changeInvState;	this.clicks_buyPopul = clicks_buyPopul;	this.clicks_tabs_ads = clicks_tabs_ads;	this.clicks_getInfo = clicks_getInfo;	this.clicks_refreshMyAdsList = clicks_refreshMyAdsList;	this.clicks_adDonePopup = clicks_adDonePopup;	this.clicks_present = clicks_present;	this.clicks_promose2 = clicks_promose2;	this.clicks_promose3 = clicks_promose3;		function updateHeight(add) {		var top1 = $("#content").offset().top;		var top2 = $("#content").outerHeight(true);		var minHeight = (options.newStyle ? 550 : 600); //460:600		//if (top2 < 250) top2 = 250;		if (add) top2 += add;		appState.lastHeightAdd = add;		appState.curHeight = top1 + top2 + 20;		$("#proContCont").css("height", Math.max(0, minHeight - appState.curHeight) + "px"); //При насильном увеличении маленькой высоты смещает баннер о покупке PRO к низу страницы		if (appState.curHeight < minHeight) appState.curHeight = minHeight;		if (progressbar.real >= 100) VK.callMethod("resizeWindow", options.app_width, appState.curHeight);	}		function updateContent() {		var proLineString;		return (function(data, withPro, proMargin, noproMargin, proTx, elemForUpdate) {			if (typeof(proLineString) == "undefined") proLineString = $TT("tab_proLine", {tx: ""});			if (withPro) {				if (proTx) data += $TT("tab_proLine", {tx: proTx}); else data += proLineString;			}			$(elemForUpdate ? elemForUpdate : "#content").html(data);			//$("#content").html("");			if (proMargin) $("#proCont").css("margin-top", proMargin + "px");			appSys.updateHeight(withPro ? -20 : noproMargin);		});		//data			- текст		//withPro		- выводить ли полоску внизу		//proMargin		- отступ полоски от контента		//noproMargin	- увеличение высоты когда нет полоски		//proTx			- текст для полоски PRO	}		function setCounter(item, num) {		try {			if (num > 0) {				$("#mainMenuItem" + item + " > .counter").show().html(num);			}else{				$("#mainMenuItem" + item + " > .counter").hide();			}		} catch(e) {		}	}		function showMetro(id, params) {		if (!params) params = {};		var options = {id: id};		if ("width" in params && window.options.newStyle) options.width = params.width;		if ("popup" in params) options.popup = params.popup; else options.popup = true;		if ("onClose" in params) options.onClose = params.onClose;		delete params.width; delete params.popup; delete params.onClose;		jsf.metroShow($TT(id, params), options);				if (id == "metro_trup") {			ZeroClipboard.config({moviePath: "js/ZeroClipboard.swf"});			var clip = new ZeroClipboard(document.getElementById("copyTrupLink"));			clip.on("complete", function(client, args) {				jsf.alert("Ссылка-ловушка успешно скопирована, теперь нажмите кнопку<br>\"Вставить\" и вставьте её в поле <b>«личный сайт»</b>");				if (window.options.newStyle) {					$("#copyTrupLink").hide();					$("#pasteTrupLink").css("display", "");					if (!app.trup1done) $("#copyTrupLinkCont > .trupIsDoneCont > .text").html("Ссылка <a href='//vk.com/edit?act=contacts' target='_blank' class='aButton1 linkToContacts' style='color:#ff3b3b; font-weight:bold;'>не вставлена</a>");				}				appState.trup1copied = true;				/*args.text*/			});		}	}		//metro_changeInv		вкл невидимки		popup=false		onGetInfo	//metro_appUpdated		обновление инфо		popup=false		onGetInfo		//metro_proBonuses		возможности PRO		popup=true		onClick in metro_buyPro "новые возможности"	//metro_buyPro			покупка PRO			popup=true		onClick in secondmenu "Стать невидимкой"	//metro_trup			ловушка				popup=true		onClick in secondmenu "Активировать ловушку"	//metro_buyPro			покупка PRO			popup=true		onClick in secondmenu "Убрать рекламу"	//metro_buyPopul		покупка гостей		popup=true		onClick in secondmenu "Стать популярным"	//metro_buyPro			покупка PRO			popup=true		onClick in secondmenu "PRO активен"	//metro_changeInv		вкл невидимки		popup=true		onClick in secondmenu "Ловушка вкл"	//metro_changeInv		вкл невидимки		popup=true		onClick in tab_account "Невидимка вкл"		//metro_offers			список офферов		popup=true		onClick/onOffers	//metro_ads				список заказов		popup=true		onClick/onGetInfoIfShowed		function alignMetroWindow() {		$("#metroWindowCont2").css("margin-top", "0px"); //Не нужно, но оставлено на всякий случай		//alert($("#metroWindow1").outerHeight() + "\n" + $("#metroWindowCont2").outerHeight(true));		jsf.windowAlign("#metroWindowCont2", {noScroll: true}); //topAlignElems: ["#metroWindowCloseButton"]	}		function updateShowesText() {		var votes			= calcVotes($("#numSlider > .runner").attr("value"));		var tm				= calcShowes.calcIt(votes,  $('[name="populSex1"].checked').attr("value"),  calcAge($("#ageSlider > .runner1").attr("value")),  calcAge($("#ageSlider > .runner2").attr("value")));		var covPercent		= tm.covPercent;		var showesNum		= tm.showesNum;		var bonusPercent	= tm.bonusPercent;		var bonusNum		= tm.bonusNum;				if (covPercent == 100) $("#coverageSum").html("100%"); else $("#coverageSum").html(covPercent.toFixed(1) + "%");		if (bonusPercent > 0 && votes >= 0) { //votes >= 5			var s = showesNum + " + " + bonusNum;			if (votes >= 0) s += "&nbsp; <font color=#999>(бонус " + Math.round(bonusPercent) + "%)</font>"; //votes >= 10		}else{			var s = (showesNum + bonusNum);			if (votes <= 1 && tm.oneVoteRise > 0) s += "&nbsp; <font color=#999>(дороже на " + tm.oneVoteRise + "%)</font>";		}		$("#showesSum").html(s);	}		function updateShowesText2() {		var sex				= $('[name="populSex2"].checked').attr("value");		var minAge			= $("#promose_minAge").val().trim(); if (minAge === "") minAge = 0;		var maxAge			= $("#promose_maxAge").val().trim(); if (maxAge === "") maxAge = 150;		var votes			= $("#promose_budget").val().trim();				$("#promose_minAge").removeClass("red");		$("#promose_maxAge").removeClass("red");		$("#promose_budget").removeClass("red");		$("#promose_ageWarning").hide();		$("#promose_budgetWarning").hide();				if (jsf.isInt(votes) && +votes >= 1 && +votes <= 2000) {			var tm = calcShowes.calcIt(+votes, 0, 0, 150, true);			$("#promose_savings").html(jsf.getEnd(votes, "голос", "голоса", "голосов") + " " + (tm.bonusPercent > 0 ? " &nbsp;(экономия <font color='#38b800'>" + Math.round(tm.bonusPercent) + "%</font>)" : ""));		}else{			$("#promose_savings").html("");		}				if (jsf.isInt(minAge) == false)	return badValues("#promose_minAge", "#promose_ageWarning", "Введено НЕ число"); else minAge = +minAge;		if (minAge < 0)					return badValues("#promose_minAge", "#promose_ageWarning", "Отриц. возраст");	//Отрицательный мин возраст		if (minAge > 100)				return badValues("#promose_minAge", "#promose_ageWarning", "Максимум 100 лет");	//Слишком большой возраст		if (jsf.isInt(maxAge) == false)	return badValues("#promose_maxAge", "#promose_ageWarning", "Введено НЕ число"); else maxAge = +maxAge;		if (maxAge < 0)					return badValues("#promose_maxAge", "#promose_ageWarning", "Отриц. возраст");	//Отрицательный макс возраст		if (maxAge < 13)				return badValues("#promose_maxAge", "#promose_ageWarning", "Минимум 13 лет");	//Макс возраст меньше 13 лет		if (maxAge > 150)				return badValues("#promose_maxAge", "#promose_ageWarning", "Максимум 150 лет");	//Макс возраст больше 150 лет		if (votes === "")				return badValues("#promose_budget", "#promose_budgetWarning", "Введите количество голосов"); else votes = +votes;		if (jsf.isInt(votes) == false)	return badValues("#promose_budget", "#promose_budgetWarning", "Введено НЕ число"); else votes = +votes;		if (votes < 0)					return badValues("#promose_budget", "#promose_budgetWarning", "Введите положительное число"); //Бюджет не должен быть отрицательным		if (votes < 1)					return badValues("#promose_budget", "#promose_budgetWarning", "Слишком маленький бюджет");		if (votes > 2000)				return badValues("#promose_budget", "#promose_budgetWarning", "Макс. бюджет 2000 голосов");		if (minAge <= 13) minAge = 0;		if (maxAge >= 113) maxAge = 1000;				var tm = calcShowes.calcIt(votes, sex, minAge, maxAge, true);		$("#promose_showesSum").html(tm.showesNum + tm.bonusNum);		$("#promose_showesExt").html(tm.bonusNum > 0 ? "(" + tm.showesNum + " + <font color='#38b800'>" + tm.bonusNum + "</font> " + jsf.getEnd(tm.bonusNum, "показ", "показа", "показов") + " бесплатно)" : "");		return {covPercent: tm.covPercent, votes: votes, sex: sex, minAge: minAge, maxAge: maxAge, showesNum: tm.showesNum, bonusNum: tm.bonusNum};				function badValues(elem, elem2, s) {			if (elem) $(elem).addClass("red");			if (elem2) {				$(elem2).html(s);				$(elem2).show();			}			$("#promose_showesSum").html("");			$("#promose_showesExt").html("");			return false;		}	}		function calcAge(a) {		a = parseInt(a, 10);		if (a <= 0) return 0;		if (a <= 99) return a + 13;		return 1000;	}		function calcVotes(a) {		a = parseInt(a, 10);		if (a < 50) return 1 + a; //До 50		if (a < 75) return 50 + (a - 49) * 2; //До 100		if (a < 85) return 100 + (a - 74) * 5; //До 150		if (a < 90) return 150 + (a - 84) * 10; //До 200		if (a < 95) return 200 + (a - 89) * 20; //До 300		if (a < 101) return 300 + (a - 94) * 50; //До 600		return 0;	}		function setBuyType() {		var interval = null;		return (function(tp, timeout) {			if (interval !== null) clearTimeout(interval);			interval = setTimeout(function() {				appState.currentBuyType = tp;			}, timeout);		});	}		function onPay(opt) {		if (typeof(opt) != "object") opt = {};		if ("prefix" in opt == false) opt.prefix = "Покупка успешно совершена";		if ("currentBuyType" in opt == false) opt.currentBuyType = appState.currentBuyType;		if (opt.currentBuyType == 0 && !options.newStyle) opt.currentBuyType = 1;				var s;		switch (opt.currentBuyType) {			case 1: s = opt.prefix + ", на вкладке \"" + (options.newStyle ? "Мой профиль" : "Аккаунт") + "\" Вы можете<br>посмотреть дату окончания действия PRO-акканта"; break;			case 2: s = opt.prefix + ", на вкладке \"" + (options.newStyle ? "Мой профиль" : "Аккаунт") + "\" Вы можете<br>посмотреть дату окончания действия невидимки"; break;			case 3: s = opt.prefix + ", на вкладке \"" + (options.newStyle ? "Стать популярнее" : "Аккаунт") + "\" Вы можете<br>следить за увеличением Вашей популярности"; break;			default: s = "";		}				if (opt.currentBuyType != 1 && s) jsf.alert(s);		//Выведем сообщение всем, кроме PRO (его мы выведем позже)		if (opt.currentBuyType == 1) app.invAsked = false;	//Нам нужно, чтобы обязательно выскочило окно о включении невидимки		app.getInfo(function() {							//Обновим информацию о пользователе			if (opt.currentBuyType == 1 && app.userInfo.needAskInv == false) {				jsf.alert(s);								//Выведем сообщение PRO, если выводить окно о включении невидимки не нужно было			}		});	}		function setStorageItem(key, value) {		options.localData[key] = value;		try { if (lsf.hasStorage) lsf.setItem(key, value); } catch(e) {}	}		function getProTimeString(votes) {		switch(votes) {			case 1: return "3 дня";			case 2: return "1 неделя";			case 3: return "2 недели";			case 4: return "3 недели";						case 5: return "1 месяц";			case 6: return "1 месяц";			case 7: return "1 месяц";			case 8: return "2 месяца";			case 9: return "2 месяца";						case 10: return "3 месяца";			case 11: return "3 месяца";			case 12: return "4 месяца";			case 13: return "5 месяцев";			case 14: return "6 месяцев";			case 15: return "7 месяцев";			case 16: return "8 месяцев";			case 17: return "9 месяцев";			case 18: return "10 месяцев";			case 19: return "11 месяцев";			case 20: return "12 месяцев";			default: return (votes * 0.6) + " месяцев";		}	}		function bind(id, child, f) {		if (typeof(child) == "function") {			f = child;			child = undefined;		}		$(id).on("click", child, function(event) {			event.preventDefault();			if (f) f.call(this, event);		});	}	function bindSecondMenu(id, f) {		if (options.newStyle && options.newSecondMenu) {			$(id).on("click", function(event) {				event.preventDefault();			});		}		$(id).on("click", options.newStyle && options.newSecondMenu ? ".text > .aButton2" : undefined, function(event) {			event.preventDefault();			if (f) f.call(this, event);		});	};	function clicks_listener(event, f) {		event.preventDefault();		if (f) f.call(this, event);	}	function clicks_trupWind() {		appSys.showMetro("metro_trup", {width: options.minVer ? 692 : 732, popup: true, onClose: function() { $("#global-zeroclipboard-html-bridge").css("top", "-9999px"); } });	}	function clicks_buyPro() {		appSys.showMetro("metro_buyPro", {width: 490, popup: true, buyInv: false});	}	function clicks_changeInvState() {		if (options.localData.isPro) {			appSys.showMetro("metro_changeInv", {width: 450, popup: true});		}else{			appSys.showMetro("metro_buyPro", {width: 490, popup: true, buyInv: true});		}	}	function clicks_buyPopul() {		if (options.newStyle) {			$("#mainMenuItem7").click();		}else{			appSys.showMetro("metro_buyPopul", {loadingPopup: false, width: 557, popup: true});			$('[name="populSex1"]').removeClass("checked");			$('[name="populSex1"][value="' + appState.populSex + '"]').addClass("checked");			appSys.updateShowesText();		}	}	function clicks_tabs_ads() {		tabs.ads();	}	function clicks_getInfo() {		app.getInfo();	}	function clicks_refreshMyAdsList() {		$("#adsTable").css("opacity", 0.5);		$("#content .promoseWideTab > .whitePaint").show();		app.getInfo();	}	function clicks_adDonePopup(clicks, showes, popupAids) {		appSys.showMetro("metro_adDonePopup", {width: 450, clicks: clicks, showes: showes, onClose: function() {			jsf.query({qTo: "server3", method: "hideAdPopup", ad_ids: popupAids});		}});	}	function clicks_present(clicks, showes, popupAids) {		tabs.present();	}	function clicks_promose2() {		tabs.promose2();	}	function clicks_promose3() {		tabs.promose3();	}};//Отображение вкладокvar tabs = new function() {	this.main = main;	this.guests = guests;	this.fans = fans;	this.friends = friends;	this.stat = stat;	this.promose = promose;	this.promose2 = promose2;	this.promose3 = promose3;	this.account = account;	this.friendGuests = friendGuests;	this.offers = offers;	this.present = present;	this.ads = ads;	this.choseOfferBonus = choseOfferBonus;		function main() {		try {			var guestsString = $TT("tab_guests", {mainPage: true, sex: 0, guestsCount: 1,    guestsList: app.guestsList, friend_id: 0});			var fansString = $TT("tab_fans", {mainPage: true, sex: 0, periodTab: 0,    fansList: (options.newStyle ? app.fansListWeek : app.fansList2)});			var mainString = app.guestsList.length > 0 ? $TT("tab_main", {}) : "";			appSys.updateContent(guestsString + fansString + mainString, false, 39, 5); // !options.localData.isPro		} catch(e) {			appSys.updateContent("");		}	}		function guests(sexId, incCount) {		//Обработка параметров		switch (sexId) {			case "tab_guests_subLink1": appState.tab_guests_sex = 0; break;			case "tab_guests_subLink2": appState.tab_guests_sex = 2; break;			case "tab_guests_subLink3": appState.tab_guests_sex = 1; break;		}		sexId = appState.tab_guests_sex;		if (options.newStyle) sexId = 0;		if (incCount) appState.tab_guests_guestsCount++; else appState.tab_guests_guestsCount = 1;				//Рендеринг		guestRender(incCount, sexId, app.guestsList, 0, !options.localData.isPro && options.newStyle);				//Обновление		if (!options.newStyle && app.guestsList.length >= 1 && app.guestsList[0].time > app.sOptions.guestsLastViewTime) { //Значение присваивается, если нужно			app.sOptions.guestsLastViewTime = app.guestsList[0].time;			jsf.saveOptions();		}	}		function fans(tabId) {		//Параметры открытой вкладки		var appFansList;		var opt_sex = 0;		var opt_per = 0;				//Вычисление параметров открой вкладки		if (options.newStyle) {			switch (tabId) {				case "tab_fans_subLink1": appState.tab_fans_period = 0; break;				case "tab_fans_subLink2": appState.tab_fans_period = 1; break;				case "tab_fans_subLink3": appState.tab_fans_period = 2; break;			}			opt_sex = 0;			opt_per = appState.tab_fans_period;		}else{			switch (tabId) {				case "tab_fans_subLink1": appState.tab_guests_sex = 0; break; //tab_fans_sex				case "tab_fans_subLink2": appState.tab_guests_sex = 2; break; //tab_fans_sex				case "tab_fans_subLink3": appState.tab_guests_sex = 1; break; //tab_fans_sex			}			opt_sex = appState.tab_guests_sex;			opt_per = 2;		}				//Выбор массива с поклонниками		switch (opt_per) {			case 0: appFansList = app.fansListWeek; break;			case 1: appFansList = app.fansListMonth; break;			case 2: appFansList = app.fansList; break;		}				//Есть ли поклонники		var hasFans = false;		for (var i = appFansList.length - 1; i >= 0; i--) {			var uid = appFansList[i].id;			if (uid in app.profilesCash == false) app.profilesCash[uid] = {};			if (opt_sex == 0 || app.profilesCash[uid].sex == opt_sex) {				hasFans = true;				break;			}		}				//Рендеринг		try {			var fansString = $TT("tab_fans", {mainPage: false, sex: opt_sex, periodTab: opt_per,    fansList: appFansList}); //tab_fans_sex			var noProMargin = 0;			if (options.newStyle && options.midVer) noProMargin = -1;			if (options.newStyle && options.minVer) noProMargin = -4;			appSys.updateContent(fansString, !options.localData.isPro, options.newStyle ? 21 : 30, noProMargin, "PRO-пользователи видят до 15 поклонников вместо " + (options.newStyle?"пяти":"десяти"));		} catch(e) {			appSys.updateContent("");		}				//Список старых поклонников		if (options.newStyle) return;		var changed = false;		var oldFansCache = {};		for (var i = app.sOptions.oldFans.length - 1; i >= 0; i--) oldFansCache[app.sOptions.oldFans[i]] = 1;				//Добавляем новых поклонников в список		if (true) {			var maxNum;			if      (options.newStyle)	maxNum = (options.localData.isPro ? 15 : 5);			else if (true)				maxNum = (options.localData.isPro ? 15 : 10);		}		for (var i = Math.min(app.fansList.length, maxNum) - 1; i >= 0; i--) {			if (app.fansList[i].id in oldFansCache == false) {				oldFansCache[app.fansList[i].id] = 1;				app.sOptions.oldFans.push(app.fansList[i].id);				changed = true;			}		}				//Удаляем старых поклонников из списка		var top20cache = {};		var newOldFans = [];		for (var i = Math.min(app.fansList.length, maxNum + 5) - 1; i >= 0; i--) top20cache[app.fansList[i].id] = 1;		for (var i = app.sOptions.oldFans.length - 1; i >= 0; i--) {			if (app.sOptions.oldFans[i] in top20cache) {				newOldFans.push(+app.sOptions.oldFans[i]);			}else{				changed = true;			}		}				//Обновляем список		if (changed) {			app.sOptions.oldFans = newOldFans;			jsf.saveOptions();		}		//console.log(app.sOptions);	}		function friends(tabId, incCount) {		//Обработка параметров		var updateTabOnly = (!!tabId);		if (tabId) appState.tab_friends_tab = parseInt(tabId.substr(18), 10); else if ($("#mainMenuItem4 > .counter").is(":visible")) appState.tab_friends_tab = 4;		tabId = appState.tab_friends_tab;		if (incCount) appState.tab_friends_frCount[tabId]++; else appState.tab_friends_frCount[tabId] = 1;				//Рендеринг		try {			var friendsString = $TT(updateTabOnly ? "tab_friends_content" : "tab_friends", {tab: tabId, frCount: appState.tab_friends_frCount[tabId],    friendsActive: app.friendsActive, friendsBlocked: app.friendsBlocked, deletedFriends: app.deletedFriends});			if (options.newStyle) {				appSys.updateContent(friendsString, false, 1, -20, "", updateTabOnly ? "#friendsContent" : ""); // !options.localData.isPro			}else{				appSys.updateContent(friendsString, false, 16, -5, "", updateTabOnly ? "#friendsContent" : ""); // !options.localData.isPro			}		} catch(e) {			appSys.updateContent("");		}				//Обновление		if (appState.tab_friends_tab == 4) {			var len = app.deletedFriends.length;			if (len >= 1) {				var time = (app.deletedFriends[len - 1].time < 1300000000 ? app.deletedFriends[len - 1].time + 1300000000 : app.deletedFriends[len - 1].time);				if (time > app.sOptions.delFrLastViewTime) { //Значение присваивается, если нужно					app.sOptions.delFrLastViewTime = time;					jsf.saveOptions();				}			}		}	}		function stat(tabId) {		if (tabId) appState.tab_stat_tab = parseInt(tabId.substr(16), 10);		try {			if (options.newStyle) {				var statString = $TT("tab_stat2", {tab: appState.tab_stat_tab});				appSys.updateContent(statString, false, 1, -20); // !options.localData.isPro			}else{				var statString = $TT("tab_stat", {tab: appState.tab_stat_tab});				appSys.updateContent(statString, false, 16, -5); // !options.localData.isPro			}		} catch(e) {			appSys.updateContent("");		}	}		function promose(updateContentOnly) {		try {			if (!updateContentOnly) {				appState.promoseTab1 = null;				appState.promoseTab2 = {sex: 0, minAge: 0, maxAge: 150, budget: 2};				appState.promoseActiveTab = 1;			}			var promoseString = $TT(updateContentOnly ? "tab_promose_content" : "tab_promose", {});			appSys.updateContent(promoseString, false, options.minVer?-4:0, options.minVer?-4:0, "", updateContentOnly ? "#promoseContent" : "");		} catch(e) {			appSys.updateContent("");		}	}		function promose2() {		appState.mainMenuTab = "mainMenuItem9";		try {			var promoseString = $TT("tab_promose2", {});			appSys.updateContent(promoseString, false, 0, 0, "", "");		} catch(e) {			appSys.updateContent("");		}	}		function promose3(opt) {		if (!opt) opt = {};		if (opt.tabId) appState.tab_promose3_tab = parseInt(opt.tabId.substr(20), 10);		appState.mainMenuTab = "mainMenuItem10";		try {			var promoseString = $TT("tab_promose3", {tab: appState.tab_promose3_tab - 1});			appSys.updateContent(promoseString, false, 0, 0, "", "");		} catch(e) {			appSys.updateContent("");		}	}		function account() {		try {			if (options.newStyle) {				var accountString = $TT("tab_account2", {});				appSys.updateContent(accountString, false, 21, 0);			}else{				var accountString = $TT("tab_account", {});				appSys.updateContent(accountString, false, 40, 19);			}		} catch(e) {			appSys.updateContent("");		}	}		function friendGuests(options) {		//user_id (об)	- id друга		//sexId			- переключить пол		//incCount		- показать ещё		//callbackPre	- коллбак перед отрисовкой		//callbackPost	- коллбак после отрисовки				//Обработка параметров		switch (options.sexId) {			case "tab_guests_subLink1": appState.tab_guests_sex = 0; break;			case "tab_guests_subLink2": appState.tab_guests_sex = 2; break;			case "tab_guests_subLink3": appState.tab_guests_sex = 1; break;		}		options.sexId = appState.tab_guests_sex;		if (options.incCount) appState.tab_guests_guestsCount++; else appState.tab_guests_guestsCount = 1;				if (options.user_id in app.friendsGuests) onGot(); else app.loadFrGuests(options.user_id, onGot);		function onGot() {			if (options.callbackPre) options.callbackPre();			guestRender(options.incCount, options.sexId, app.friendsGuests[options.user_id], options.user_id, false);			if (options.callbackPost) options.callbackPost();		}	}		function guestRender(incCount, sexId, guestsList, friend_id, withLine) {		try {			var guestsString = $TT(incCount ? "tab_guests_content" : "tab_guests", {mainPage: false, sex: sexId, guestsCount: appState.tab_guests_guestsCount,    guestsList: guestsList, friend_id: friend_id});			if (incCount) {				$("#moreGuests").remove();				$(".vk_ads_in_guest.noInitializated").removeClass("noInitializated");				$("#guestCont").append(guestsString);				appSys.updateHeight(appState.lastHeightAdd);			}else{				appSys.updateContent(guestsString, withLine, options.newStyle ? 28 : 39, 4); // !options.localData.isPro			}			var node = $(".vk_ads_in_guest.noInitializated");			if (node.length >= 1) {				var id = node.attr("id");				VK.Widgets.Ads(id, {}, {					"ad_unit_id": 1349,					"demo": "0",					"ads_count": 2,					"ad_type": "horizontal",					"ad_unit_type": "horizontal",					"ad_unit_width": options.app_width - 50,					"ad_unit_height": 135,					"font_size": "big",					"background_color": options.newStyle ? "FFFFFF" : "F3F7FF",					"separator_color": options.newStyle ? "FFFFFF" : "F3F7FF",					"vk_link_color": "4073B5",					"handler": function(errorCode) {						appSys.updateHeight(appState.lastHeightAdd);					}				});			}		} catch(e) {			appSys.updateContent("");		}	}		function offers(opt) {		if (typeof(opt) == "object") {			appState.tab_offers_main = opt.main;			appState.tab_offers_promose = opt.promose;		}				if (options.newStyle) {			var popup = (!appState.tab_offers_main);			appSys.showMetro("metro_offers", {width: 540, popup: popup, mainWind: appState.tab_offers_main, promoseOffer: appState.tab_offers_promose});		}else{			try {				var html = $TT("metro_offers", {mainWind: appState.tab_offers_main, promoseOffer: appState.tab_offers_promose});				jsf.modalShow(html, {id: "offerPopup", width: 580});			} catch(e) {			}		}	}		function present() {		appSys.showMetro("metro_present", {width: 540});	}		function ads() {		if (options.newStyle) {			appSys.showMetro("metro_ads", {width: 596, popup: true});		}else{			var html = $TT("metro_ads", {});			try {				jsf.modalShow(html, {id: "myAds", width: 609});			} catch(e) {			}		}	}		function choseOfferBonus() {		if (!app.userInfo.doneOffers) return false;		if (!options.newStyle) return false;		for (var i = 0; i < app.userInfo.doneOffers.length; i++) {			var offer = app.userInfo.doneOffers[i];			if (offer.id in appState.closedOfferChoses) continue;			appState.closedOfferChoses[offer.id] = 1;			initFunctions.execAfterLoading2(function() {				appSys.showMetro("metro_choseOfferBonus", {width: 450, popup: false, offer_time: offer.time, offer_id: offer.id, offer_votes: offer.votes, offer_name: offer.name});			});			return true;		}		return false;	}};//jsf.alert("viewer_id = " + query.viewer_id);//jsf.alert("auth_key = " + query.auth_key, true);//event.stopPropagation(); //Отмена распространения события на предков/*ИнформацияКнопка "Показать ещё" есть в разделах:1. Гости2. Друзья - Недавно заходили3. Друзья - Удалились с друзей*/